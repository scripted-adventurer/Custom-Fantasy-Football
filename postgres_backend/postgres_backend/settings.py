"""
Django settings for postgres_backend project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['testserver', '127.0.0.1', 'localhost']


# Application definition

INSTALLED_APPS = [
    'data.apps.DataConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'postgres_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'postgres_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
  'default': {
    'ENGINE': 'django.db.backends.postgresql',
    'NAME': os.environ['NFLDB_DB_NAME'],
    'USER': os.environ['NFLDB_USERNAME'],
    'PASSWORD': os.environ['NFLDB_PASSWORD'],
    'HOST': os.environ['NFLDB_HOSTNAME'],
    'PORT': os.environ['NFLDB_PORT'],
  }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

'''A 'season' is specified by a year and a phase. For example, 2019 REG refers to
the 2019 regular season. Include below a mapping of years to season phase(s) 
from that year. Anything included will be synced into the database.
PRE - Preseason
REG - Regular season
PRO - Pro Bowl
POST - Postseason '''
INCLUDED_SEASONS = {
    # 2011: ['PRE', 'REG', 'PRO', 'POST'],
    # 2012: ['PRE', 'REG', 'PRO', 'POST'],
    # 2013: ['PRE', 'REG', 'PRO', 'POST'],
    # 2014: ['PRE', 'REG', 'PRO', 'POST'],
    # 2015: ['PRE', 'REG', 'PRO', 'POST'],
    # 2016: ['PRE', 'REG', 'PRO', 'POST'],
    # 2017: ['PRE', 'REG', 'PRO', 'POST'],
    # 2018: ['PRE', 'REG', 'PRO', 'POST'],
    2019: ['PRE', 'REG', 'PRO', 'POST'],
    2020: ['PRE', 'REG', 'PRO', 'POST']
}